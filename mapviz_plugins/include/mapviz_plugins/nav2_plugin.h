// *****************************************************************************
//
// Copyright (c) 2017, Southwest Research Institute速 (SwRI速)
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of Southwest Research Institute速 (SwRI速) nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// *****************************************************************************

#ifndef MAPVIZ_PLUGINS_NAV2_PLUGIN_H_
#define MAPVIZ_PLUGINS_NAV2_PLUGIN_H_

// C++ standard libraries
#include <string>
#include <vector>
#include <mapviz/mapviz_plugin.h>

// QT libraries
#include <QGLWidget>
#include <QObject>
#include <QWidget>

// ROS libraries
#include <rclcpp_action/rclcpp_action.hpp>
#include <geometry_msgs/msg/pose_stamped.hpp>
#include <tf2_geometry_msgs/tf2_geometry_msgs.h>
#include <tf2/transform_datatypes.h>

// Mapviz libraries
#include <mapviz/map_canvas.h>

#include <nav2_msgs/action/navigate_to_pose.hpp>

// QT autogenerated files
#include "ui_nav2_config.h"

namespace mapviz_plugins
{
  class Nav2Plugin: public mapviz::MapvizPlugin
  {
    Q_OBJECT

public:
    using NavClientT = nav2_msgs::action::NavigateToPose;
    using NavActionClient = rclcpp_action::Client < NavClientT >;

    Nav2Plugin();
    ~Nav2Plugin() override;

    bool Initialize(QGLWidget * canvas) override;
    void Shutdown() override {}

    void Draw(double x, double y, double scale) override;

    void Paint(QPainter * painter, double x, double y, double scale) override {}
    void Transform() override {}

    void LoadConfig(const YAML::Node & node, const std::string & path) override;
    void SaveConfig(YAML::Emitter & emitter, const std::string & path) override;

    QWidget * GetConfigWidget(QWidget * parent) override;

protected:
    virtual void PrintError(const std::string & message) override;
    virtual void PrintInfo(const std::string & message) override;
    virtual void PrintWarning(const std::string & message) override;
    virtual bool eventFilter(QObject * object, QEvent * event) override;
    void timerEvent(QTimerEvent *) override;

    void GoalStatusUpdate(action_msgs::msg::GoalStatus status);

    bool handleMousePress(QMouseEvent *);
    bool handleMouseRelease(QMouseEvent *);
    bool handleMouseMove(QMouseEvent *);

private Q_SLOTS:
    void SelectingGoalToggle(bool checked);
    void Abort();

private:
    Ui::nav2_config ui_;
    QWidget * config_widget_;
    mapviz::MapCanvas * map_canvas_;

    bool is_mouse_down_;
    QPointF arrow_tail_position_;
    float arrow_angle_;

    NavActionClient::SharedPtr nav_client_;
    std::shared_future < rclcpp_action::ClientGoalHandle < NavClientT > ::SharedPtr >
    nav_future_goal_handle_;
    rclcpp::Subscription < nav2_msgs::action::NavigateToPose::Impl::FeedbackMessage > ::SharedPtr
    navigation_feedback_sub_;
    rclcpp::Subscription < nav2_msgs::action::NavigateToPose::Impl::GoalStatusMessage > ::SharedPtr
    navigation_goal_status_sub_;

    bool connected_to_nav_;
    bool monitoring_action_state_;
  };
}

#endif  // MAPVIZ_PLUGINS_NAV2_PLUGIN_H_
